image: maurosoft1973/docker-with-buildx2

variables:
    DOCKER_CLI_EXPERIMENTAL: enabled

stages:
    - build
    - push
    - readme

before_script:
    - apk add --no-cache bash curl file jq
    - /bin/bash
    - ENV_ALPINE_VERSION=.${CI_ALPINE_VERSION:-""}
    - >
      if [ "${CI_ALPINE_VERSION:-""}" == "" ]; then 
         ENV_ALPINE_VERSION=.env
      else
         ENV_ALPINE_VERSION=.env.${CI_ALPINE_VERSION:-""}
      fi
    - echo ${ENV_ALPINE_VERSION}
    - set -a;
    - source ./${ENV_ALPINE_VERSION};
    - set +a;
    - export JOB_DOCKER_IMAGE=${CI_DOCKER_IMAGE:-"$DOCKER_IMAGE"}
    - export JOB_ALPINE_VERSION=${CI_ALPINE_VERSION:-"$ALPINE_VERSION"}
    - export JOB_ALPINE_VERSION_DATE=${CI_ALPINE_VERSION_DATE:-"$ALPINE_VERSION_DATE"}
    - export JOB_ALPINE_RELEASE=${CI_ALPINE_RELEASE:-"$ALPINE_RELEASE"}
    - export JOB_LFTP_VERSION=${CI_LFTP_VERSION:-"$LFTP_VERSION"}
    - export JOB_LFTP_VERSION_DATE=${CI_LFTP_VERSION_DATE:-"$LFTP_VERSION_DATE"}
    - echo "DOCKER_IMAGE:$JOB_DOCKER_IMAGE"
    - echo "ALPINE_VERSION:$JOB_ALPINE_VERSION"
    - echo "ALPINE_VERSION_DATE:$JOB_ALPINE_VERSION_DATE"
    - echo "ALPINE_RELEASE:$JOB_ALPINE_RELEASE"
    - echo "LFTP_VERSION:$JOB_LFTP_VERSION"
    - echo "LFTP_VERSION_DATE:$JOB_LFTP_VERSION_DATE"

build-test:
    stage: build
    only:
        - master
    variables:
        RELEASE: "TEST"
    script:
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=aarch64 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=armhf -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=armv7 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=ppc64le -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=x86 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=x86_64 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE

build-current:
    stage: build
    only:
        - master
    variables:
        RELEASE: "CURRENT"
    script:
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=aarch64 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=armhf -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=armv7 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=ppc64le -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=x86 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=x86_64 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE

build-latest:
    stage: build
    only:
        - master
    variables:
        RELEASE: "LATEST"
    script:
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=aarch64 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=armhf -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=armv7 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=ppc64le -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=x86 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-image.sh -di=$JOB_DOCKER_IMAGE -aa=x86_64 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE

push-test:
    stage: push
    only:
        - master
    variables:
        RELEASE: "TEST"
    needs:
        - build-test
    script:
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=aarch64 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=armhf -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=armv7 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=ppc64le -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=x86 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=x86_64 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-manifest.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -av=$JOB_ALPINE_VERSION -r=$RELEASE

push-current:
    stage: push
    only:
        - master
    variables:
        RELEASE: "CURRENT"
    needs:
        - build-current
    script:
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=aarch64 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=armhf -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=armv7 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=ppc64le -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=x86 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=x86_64 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-manifest.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -av=$JOB_ALPINE_VERSION -r=$RELEASE

push-latest:
    stage: push
    only:
        - master
    variables:
        RELEASE: "LATEST"
    needs:
        - build-latest
    script:
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=aarch64 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=armhf -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=armv7 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=ppc64le -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=x86 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./push-image.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -aa=x86_64 -av=$JOB_ALPINE_VERSION -ad="$JOB_ALPINE_VERSION_DATE" -ar=$JOB_ALPINE_RELEASE -lv=$JOB_LFTP_VERSION -ld=$JOB_LFTP_VERSION_DATE -r=$RELEASE
        - bash ./build-manifest.sh -di=$JOB_DOCKER_IMAGE -du=$DOCKER_HUB_USERNAME -dp=$DOCKER_HUB_PASSWORD -av=$JOB_ALPINE_VERSION -r=$RELEASE

readme:
    stage: readme
    variables:
        GITLAB_SSH_KEY: "$GITLAB_CI_SSH_KEY"
        DOCKERHUB_USERNAME: "$DOCKER_HUB_USER"
        DOCKERHUB_PASSWORD: "$DOCKER_HUB_PASSWORD"
        DOCKERHUB_REPO_PREFIX: "maurosoft1973"
        DOCKERHUB_REPO_NAME: "alpine-lftp"
        DOCKERHUB_SHORT_DESCRIPTION: "LFTP Docker Image with Multilanguage e Timezone support running on Alpine Linux"
    only:
        - master
    needs:
        - push-latest
    script:
        - apk add --no-cache git openssh-client ca-certificates
        - git config --global user.email "mauro.cardillo@gmail.com"
        - git config --global user.name "Mauro Cardillo"
        - /bin/bash
        - mkdir -p ~/.ssh &&  chmod 700 ~/.ssh
        - echo -e "$GITLAB_SSH_KEY" > ~/.ssh/gitlab_ci_ed25519
        - chmod 600 ~/.ssh/gitlab_ci_ed25519
        - echo -e "Host gitlab.com\nHostName gitlab.com\nIdentityFile ~/.ssh/gitlab_ci_ed25519" > ~/.ssh/config
        - echo -e "Add host gitlab.com to known_hosts"
        - ssh-keyscan -H gitlab.com >> ~/.ssh/known_hosts
        - echo -e "Setting permission for ~/.ssh/known_hosts (chmod 644)"
        - chmod 644 ~/.ssh/known_hosts
        - git clone git@gitlab.com:maurosoft1973-docker/$DOCKERHUB_REPO_NAME.git /tmp/$DOCKERHUB_REPO_NAME
        - cd /tmp/$DOCKERHUB_REPO_NAME
        - LAST_UPDATE=$(date +"%d.%m.%Y %H:%M:%S")
        - echo "Generate README for Version ${ALPINE_VERSION}"
        - sed "s/\%ALPINE_RELEASE\%/${ALPINE_RELEASE}/g" README.tpl > README_COMPILE.md1
        - sed "s/\%ALPINE_VERSION\%/${ALPINE_VERSION}/g" README_COMPILE.md1 > README_COMPILE.md2
        - sed "s/\%ALPINE_VERSION_DATE\%/${ALPINE_VERSION_DATE}/g" README_COMPILE.md2 > README_COMPILE.md3
        - sed "s/\%LFTP_VERSION\%/${LFTP_VERSION}/g" README_COMPILE.md3 > README_COMPILE.md4
        - sed "s/\%LFTP_VERSION_DATE\%/${LFTP_VERSION_DATE}/g" README_COMPILE.md4 > README_COMPILE.md5
        - sed "s/\%LAST_UPDATE\%/${LAST_UPDATE}/g" README_COMPILE.md5 > README.md
        - rm -rf README_COMPILE.*
        - git add .
        - git commit -m "Update README"
        - git push -o ci.skip
        - FULL_DESCRIPTION=$(if [ -f "$(pwd)/README.md" ]; then cat "$(pwd)/README.md"; else echo ""; fi)
        - docker pull maurosoft1973/alpine-readme-to-dockerhub
        - docker run --rm -e DOCKERHUB_USERNAME="$DOCKERHUB_USERNAME" -e DOCKERHUB_PASSWORD="$DOCKERHUB_PASSWORD" -e DOCKERHUB_REPO_PREFIX="$DOCKERHUB_REPO_PREFIX" -e DOCKERHUB_REPO_NAME="$DOCKERHUB_REPO_NAME" -e SHORT_DESCRIPTION="$DOCKERHUB_SHORT_DESCRIPTION" -e FULL_DESCRIPTION="$FULL_DESCRIPTION" maurosoft1973/alpine-readme-to-dockerhub
